generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?
  githubId  String?  @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  githubUrl   String
  description String?
  status      ProjectStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  deployments Deployment[]
  commits     Commit[]

  @@map("projects")
}

model Deployment {
  id        String           @id @default(cuid())
  status    DeploymentStatus @default(PENDING)
  url       String?
  logs      String?
  error     String?
  suggestion String?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("deployments")
}

model Commit {
  id        String   @id @default(cuid())
  sha       String
  message   String
  author    String
  date      DateTime
  url       String
  createdAt DateTime @default(now())

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("commits")
}

enum ProjectStatus {
  PENDING
  BUILDING
  DEPLOYED
  FAILED
}

enum DeploymentStatus {
  PENDING
  BUILDING
  SUCCESS
  FAILED
}